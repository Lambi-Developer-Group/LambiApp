// Generated by view binder compiler. Do not edit!
package com.capstone.lambiapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.lambiapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTutorialBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnRecommendations;

  @NonNull
  public final LinearLayout tutorCapture;

  @NonNull
  public final LinearLayout tutorFinal;

  @NonNull
  public final LinearLayout tutorHistory;

  @NonNull
  public final LinearLayout tutorRecomendation;

  private FragmentTutorialBinding(@NonNull ScrollView rootView, @NonNull Button btnRecommendations,
      @NonNull LinearLayout tutorCapture, @NonNull LinearLayout tutorFinal,
      @NonNull LinearLayout tutorHistory, @NonNull LinearLayout tutorRecomendation) {
    this.rootView = rootView;
    this.btnRecommendations = btnRecommendations;
    this.tutorCapture = tutorCapture;
    this.tutorFinal = tutorFinal;
    this.tutorHistory = tutorHistory;
    this.tutorRecomendation = tutorRecomendation;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTutorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTutorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tutorial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTutorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_recommendations;
      Button btnRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (btnRecommendations == null) {
        break missingId;
      }

      id = R.id.tutor_capture;
      LinearLayout tutorCapture = ViewBindings.findChildViewById(rootView, id);
      if (tutorCapture == null) {
        break missingId;
      }

      id = R.id.tutor_Final;
      LinearLayout tutorFinal = ViewBindings.findChildViewById(rootView, id);
      if (tutorFinal == null) {
        break missingId;
      }

      id = R.id.tutor_history;
      LinearLayout tutorHistory = ViewBindings.findChildViewById(rootView, id);
      if (tutorHistory == null) {
        break missingId;
      }

      id = R.id.tutor_recomendation;
      LinearLayout tutorRecomendation = ViewBindings.findChildViewById(rootView, id);
      if (tutorRecomendation == null) {
        break missingId;
      }

      return new FragmentTutorialBinding((ScrollView) rootView, btnRecommendations, tutorCapture,
          tutorFinal, tutorHistory, tutorRecomendation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
