// Generated by view binder compiler. Do not edit!
package com.capstone.lambiapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.lambiapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCameraViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnColorpicker;

  @NonNull
  public final Button btnUploadImage;

  @NonNull
  public final LinearLayout color;

  @NonNull
  public final ImageView previewCaptureCamera;

  @NonNull
  public final View previewSelectedColor;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView tvColorPicker;

  private ActivityCameraViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnColorpicker, @NonNull Button btnUploadImage,
      @NonNull LinearLayout color, @NonNull ImageView previewCaptureCamera,
      @NonNull View previewSelectedColor, @NonNull ProgressBar progressBar,
      @NonNull TextView tvColorPicker) {
    this.rootView = rootView;
    this.btnColorpicker = btnColorpicker;
    this.btnUploadImage = btnUploadImage;
    this.color = color;
    this.previewCaptureCamera = previewCaptureCamera;
    this.previewSelectedColor = previewSelectedColor;
    this.progressBar = progressBar;
    this.tvColorPicker = tvColorPicker;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCameraViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCameraViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_camera_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCameraViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_colorpicker;
      LinearLayout btnColorpicker = ViewBindings.findChildViewById(rootView, id);
      if (btnColorpicker == null) {
        break missingId;
      }

      id = R.id.btn_upload_image;
      Button btnUploadImage = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadImage == null) {
        break missingId;
      }

      id = R.id.color;
      LinearLayout color = ViewBindings.findChildViewById(rootView, id);
      if (color == null) {
        break missingId;
      }

      id = R.id.preview_capture_camera;
      ImageView previewCaptureCamera = ViewBindings.findChildViewById(rootView, id);
      if (previewCaptureCamera == null) {
        break missingId;
      }

      id = R.id.preview_selected_color;
      View previewSelectedColor = ViewBindings.findChildViewById(rootView, id);
      if (previewSelectedColor == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tv_color_picker;
      TextView tvColorPicker = ViewBindings.findChildViewById(rootView, id);
      if (tvColorPicker == null) {
        break missingId;
      }

      return new ActivityCameraViewBinding((ConstraintLayout) rootView, btnColorpicker,
          btnUploadImage, color, previewCaptureCamera, previewSelectedColor, progressBar,
          tvColorPicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
